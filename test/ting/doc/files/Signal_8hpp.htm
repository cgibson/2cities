<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>ting: Signal.hpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<!-- Generated by Doxygen 1.6.1 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="main.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="files.htm"><span>File&nbsp;List</span></a></li>
      <li><a href="globals.htm"><span>File&nbsp;Members</span></a></li>
    </ul>
  </div>
</div>
<div class="contents">
<h1>Signal.hpp File Reference</h1>
<p>Templates to implement signal-slot callback technique.  
<a href="#_details">More...</a></p>
<code>#include &lt;vector&gt;</code><br/>
<code>#include &quot;<a class="el" href="codegen_8h_source.htm">codegen.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="Ref_8hpp_source.htm">Ref.hpp</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="Thread_8hpp_source.htm">Thread.hpp</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="debug_8hpp_source.htm">debug.hpp</a>&quot;</code><br/>

<p><a href="Signal_8hpp_source.htm">Go to the source code of this file.</a></p>
<table border="0" cellpadding="0" cellspacing="0">
<tr><td colspan="2"><h2>Namespaces</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">namespace &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceting.htm">ting</a></td></tr>

<p><tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight"><p>the main namespace of <a class="el" href="namespaceting.htm" title="the main namespace of ting library.">ting</a> library. </p>
<br/></td></tr>
</p>
<tr><td colspan="2"><h2>Defines</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="Signal_8hpp.htm#a9787dae13801fca2d795c0f4621bb189">M_MAX_NUM_SIG_PARAMETERS</a>&nbsp;&nbsp;&nbsp;10</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="Signal_8hpp.htm#ac2e09b5ed308aef5bc1d3a02b4631d0e">M_TEMPLATE_PARAM</a>(n, a)&nbsp;&nbsp;&nbsp;M_COMMA_IF_NOT_0(n) class T_P##n</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="Signal_8hpp.htm#a00edffe73a19f0b65da07defa4a0a57b">M_TEMPLATE_PARAMS</a>(n)&nbsp;&nbsp;&nbsp;M_REPEAT1(n, M_TEMPLATE_PARAM, )</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="Signal_8hpp.htm#a4ab915b43f00dd493c8eb9fa1dfeaf8f">M_TEMPLATE</a>(n)&nbsp;&nbsp;&nbsp;M_IF_NOT_0(n, template &lt;, ) M_TEMPLATE_PARAMS(n) M_IF_NOT_0(n, &gt;, )</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="Signal_8hpp.htm#a8e4329df3fb11ed1c78114fd48096fab">M_FUNC_PARAM_FULL</a>(n, a)&nbsp;&nbsp;&nbsp;M_COMMA_IF_NOT_0(n) T_P##n p##n</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="Signal_8hpp.htm#a4cde2f03e3fa32522439246e4a98b198">M_FUNC_PARAMS_FULL</a>(n)&nbsp;&nbsp;&nbsp;M_REPEAT1(n, M_FUNC_PARAM_FULL, )</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="Signal_8hpp.htm#a00847195d6cf19cf5f8f70eabc8242d0">M_FUNC_PARAM_TYPE</a>(n, a)&nbsp;&nbsp;&nbsp;M_COMMA_IF_NOT_0(n) T_P##n</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="Signal_8hpp.htm#a4c9c16dded757fd7d883c9c3ce5035ba">M_FUNC_PARAM_TYPES</a>(n)&nbsp;&nbsp;&nbsp;M_REPEAT1(n, M_FUNC_PARAM_TYPE, )</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="Signal_8hpp.htm#a8dff8a96b2e78999308f721544366613">M_FUNC_PARAM_NAME</a>(n, a)&nbsp;&nbsp;&nbsp;M_COMMA_IF_NOT_0(n) p##n</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="Signal_8hpp.htm#a72286fea7ff3862d60f35a40ae98f756">M_FUNC_PARAM_NAMES</a>(n)&nbsp;&nbsp;&nbsp;M_REPEAT1(n, M_FUNC_PARAM_NAME, )</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="Signal_8hpp.htm#af3ea08a89d379991f729107b32fedf81">M_FUNC_SLOT</a>(num_func_params, num_sig_params)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="Signal_8hpp.htm#ae2c863227b961c0fff1cc7845dbbf46a">M_METHOD_SLOT</a>(num_meth_params, num_sig_params)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="Signal_8hpp.htm#a3741b69e6b5d9e3c8c9abad291ca3da3">M_METHOD_WEAKREF_SLOT</a>(num_meth_params, num_sig_params)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="Signal_8hpp.htm#a8b69e77a39422439fcb7c64c2bb410dd">M_CONNECT_FUNC</a>(num_func_params, unused)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="Signal_8hpp.htm#a04356d427e7212f573cbd78768ee0e83">M_CONNECT_METH</a>(num_meth_params, unused)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="Signal_8hpp.htm#a0b0cb1803379c237b8b1b9564187d743">M_CONNECT_METH_WEAKREF</a>(num_meth_params, unused)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="Signal_8hpp.htm#a286f87d7166842083364fdedcf375808">M_SEARCH_FUNCSLOT</a>(num_func_params, num_sig_params)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="Signal_8hpp.htm#a4ccf98921746c7f4f3115f195c41f6a8">M_SEARCH_METHSLOT</a>(num_meth_params, unused)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="Signal_8hpp.htm#a62792d50ace6e73082e82fc7e0056da6">M_SEARCH_METHSLOT_WEAKREF</a>(num_meth_params, unused)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="Signal_8hpp.htm#a6cde0218a676f99158784bdda8e6c7ba">M_DISCONNECT_FUNC</a>(num_func_params, unused)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="Signal_8hpp.htm#a4543e92ad3a8bfd1a19f2a7e69803af1">M_DISCONNECT_METH</a>(num_meth_params, unused)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="Signal_8hpp.htm#ac325140e2b014c5531179f607f0fe7fb">M_DISCONNECT_METH_WEAKREF</a>(num_meth_params, unused)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="Signal_8hpp.htm#a551ea506f7229775331532a0663e4af9">M_SIGNAL</a>(n, unused)</td></tr>
</table>
<hr/><a name="_details"></a><h2>Detailed Description</h2>
<p>Templates to implement signal-slot callback technique. </p>
<dl class="author"><dt><b>Author:</b></dt><dd>Ivan Gagis &lt;<a href="mailto:igagis@gmail.com">igagis@gmail.com</a>&gt; </dd></dl>
<hr/><h2>Define Documentation</h2>
<a class="anchor" id="a8b69e77a39422439fcb7c64c2bb410dd"></a><!-- doxytag: member="Signal.hpp::M_CONNECT_FUNC" ref="a8b69e77a39422439fcb7c64c2bb410dd" args="(num_func_params, unused)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define M_CONNECT_FUNC</td>
          <td>(</td>
          <td class="paramtype">num_func_params, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unused&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<b>Value:</b><div class="fragment"><pre class="fragment"><span class="keyword">template</span> &lt;<span class="keyword">class</span> T_Ret&gt; <span class="keywordtype">void</span> Connect(T_Ret(*f)(<a class="code" href="Signal_8hpp.htm#a4c9c16dded757fd7d883c9c3ce5035ba">M_FUNC_PARAM_TYPES</a>(num_func_params))){ \
        <a class="code" href="debug_8hpp.htm#aca68c0d4ac8df0838e209fb5300f7be3">ASSERT</a>(f) \
        Ptr&lt;SlotLink&gt; sl( \
                        static_cast&lt;SlotLink*&gt;( <span class="keyword">new</span> FuncSlot##num_func_params&lt;T_Ret&gt;(f)) \
                ); \
        <a class="code" href="classting_1_1Mutex_1_1Guard.htm" title="Helper class which automatically Locks the given mutex.">ting::Mutex::Guard</a> mutexGuard(this-&gt;mutex); \
        this-&gt;slotLink.push_back(sl); \
}
</pre></div>
</div>
</div>
<a class="anchor" id="a04356d427e7212f573cbd78768ee0e83"></a><!-- doxytag: member="Signal.hpp::M_CONNECT_METH" ref="a04356d427e7212f573cbd78768ee0e83" args="(num_meth_params, unused)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define M_CONNECT_METH</td>
          <td>(</td>
          <td class="paramtype">num_meth_params, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unused&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<b>Value:</b><div class="fragment"><pre class="fragment"><span class="keyword">template</span> &lt;<span class="keyword">class</span> T_Ob, <span class="keyword">class</span> T_Ret&gt; <span class="keywordtype">void</span> Connect(T_Ob* o, T_Ret(T_Ob::*m)(<a class="code" href="Signal_8hpp.htm#a4c9c16dded757fd7d883c9c3ce5035ba">M_FUNC_PARAM_TYPES</a>(num_meth_params))){ \
        <a class="code" href="debug_8hpp.htm#aca68c0d4ac8df0838e209fb5300f7be3">ASSERT</a>(o) \
        <a class="code" href="debug_8hpp.htm#aca68c0d4ac8df0838e209fb5300f7be3">ASSERT</a>(m) \
        Ptr&lt;SlotLink&gt; sl( \
                        static_cast&lt;SlotLink*&gt;(<span class="keyword">new</span> MethodSlot##num_meth_params&lt;T_Ob, T_Ret&gt;(o, m)) \
                ); \
        <a class="code" href="classting_1_1Mutex_1_1Guard.htm" title="Helper class which automatically Locks the given mutex.">ting::Mutex::Guard</a> mutexGuard(this-&gt;mutex); \
        this-&gt;slotLink.push_back(sl); \
}
</pre></div>
</div>
</div>
<a class="anchor" id="a0b0cb1803379c237b8b1b9564187d743"></a><!-- doxytag: member="Signal.hpp::M_CONNECT_METH_WEAKREF" ref="a0b0cb1803379c237b8b1b9564187d743" args="(num_meth_params, unused)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define M_CONNECT_METH_WEAKREF</td>
          <td>(</td>
          <td class="paramtype">num_meth_params, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unused&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<b>Value:</b><div class="fragment"><pre class="fragment"><span class="keyword">template</span> &lt;<span class="keyword">class</span> T_Ob, <span class="keyword">class</span> T_Ret&gt; <span class="keywordtype">void</span> Connect(WeakRef&lt;T_Ob&gt;&amp; o, T_Ret(T_Ob::*m)(<a class="code" href="Signal_8hpp.htm#a4c9c16dded757fd7d883c9c3ce5035ba">M_FUNC_PARAM_TYPES</a>(num_meth_params))){ \
        <a class="code" href="debug_8hpp.htm#aca68c0d4ac8df0838e209fb5300f7be3">ASSERT</a>(m) \
        Ptr&lt;SlotLink&gt; sl( \
                        static_cast&lt;SlotLink*&gt;(<span class="keyword">new</span> WeakRefMethodSlot##num_meth_params&lt;T_Ob, T_Ret&gt;(o, m)) \
                ); \
        <a class="code" href="classting_1_1Mutex_1_1Guard.htm" title="Helper class which automatically Locks the given mutex.">ting::Mutex::Guard</a> mutexGuard(this-&gt;mutex); \
        this-&gt;slotLink.push_back(sl); \
}
</pre></div>
</div>
</div>
<a class="anchor" id="a6cde0218a676f99158784bdda8e6c7ba"></a><!-- doxytag: member="Signal.hpp::M_DISCONNECT_FUNC" ref="a6cde0218a676f99158784bdda8e6c7ba" args="(num_func_params, unused)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define M_DISCONNECT_FUNC</td>
          <td>(</td>
          <td class="paramtype">num_func_params, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unused&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<b>Value:</b><div class="fragment"><pre class="fragment"><span class="keyword">template</span> &lt;<span class="keyword">class</span> T_Ret&gt; <span class="keywordtype">bool</span> Disconnect(T_Ret(*f)(<a class="code" href="Signal_8hpp.htm#a4c9c16dded757fd7d883c9c3ce5035ba">M_FUNC_PARAM_TYPES</a>(num_func_params))){ \
        <a class="code" href="debug_8hpp.htm#aca68c0d4ac8df0838e209fb5300f7be3">ASSERT</a>(f) \
        <a class="code" href="classting_1_1Mutex_1_1Guard.htm" title="Helper class which automatically Locks the given mutex.">ting::Mutex::Guard</a> mutexGuard(this-&gt;mutex); \
        T_SlotLinkIter i = this-&gt;SearchFuncSlot(f); \
        <span class="keywordflow">if</span>(i != this-&gt;slotLink.end()){ \
                this-&gt;slotLink.erase(i); \
                <span class="keywordflow">return</span> <span class="keyword">true</span>; \
        } \
        <span class="keywordflow">return</span> <span class="keyword">false</span>; \
}
</pre></div>
</div>
</div>
<a class="anchor" id="a4543e92ad3a8bfd1a19f2a7e69803af1"></a><!-- doxytag: member="Signal.hpp::M_DISCONNECT_METH" ref="a4543e92ad3a8bfd1a19f2a7e69803af1" args="(num_meth_params, unused)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define M_DISCONNECT_METH</td>
          <td>(</td>
          <td class="paramtype">num_meth_params, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unused&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<b>Value:</b><div class="fragment"><pre class="fragment"><span class="keyword">template</span> &lt;<span class="keyword">class</span> T_Ob, <span class="keyword">class</span> T_Ret&gt; <span class="keywordtype">bool</span> Disconnect( \
                T_Ob* o, \
                T_Ret(T_Ob::*m)(<a class="code" href="Signal_8hpp.htm#a4c9c16dded757fd7d883c9c3ce5035ba">M_FUNC_PARAM_TYPES</a>(num_meth_params)) \
        ) \
{ \
        <a class="code" href="debug_8hpp.htm#aca68c0d4ac8df0838e209fb5300f7be3">ASSERT</a>(o) \
        <a class="code" href="debug_8hpp.htm#aca68c0d4ac8df0838e209fb5300f7be3">ASSERT</a>(m) \
        <a class="code" href="classting_1_1Mutex_1_1Guard.htm" title="Helper class which automatically Locks the given mutex.">ting::Mutex::Guard</a> mutexGuard(this-&gt;mutex); \
        T_SlotLinkIter i = this-&gt;SearchMethSlot(o, m); \
        <span class="keywordflow">if</span>(i != this-&gt;slotLink.end()){ \
                this-&gt;slotLink.erase(i); \
                <span class="keywordflow">return</span> <span class="keyword">true</span>; \
        } \
        <span class="keywordflow">return</span> <span class="keyword">false</span>; \
}
</pre></div>
</div>
</div>
<a class="anchor" id="ac325140e2b014c5531179f607f0fe7fb"></a><!-- doxytag: member="Signal.hpp::M_DISCONNECT_METH_WEAKREF" ref="ac325140e2b014c5531179f607f0fe7fb" args="(num_meth_params, unused)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define M_DISCONNECT_METH_WEAKREF</td>
          <td>(</td>
          <td class="paramtype">num_meth_params, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unused&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<b>Value:</b><div class="fragment"><pre class="fragment"><span class="keyword">template</span> &lt;<span class="keyword">class</span> T_Ob, <span class="keyword">class</span> T_Ret&gt; <span class="keywordtype">bool</span> Disconnect( \
                <a class="code" href="classting_1_1WeakRef.htm" title="Weak Reference to a reference counted object.">ting::WeakRef&lt;T_Ob&gt;</a>&amp; o, \
                T_Ret(T_Ob::*m)(<a class="code" href="Signal_8hpp.htm#a4c9c16dded757fd7d883c9c3ce5035ba">M_FUNC_PARAM_TYPES</a>(num_meth_params)) \
        ) \
{ \
        <a class="code" href="debug_8hpp.htm#aca68c0d4ac8df0838e209fb5300f7be3">ASSERT</a>(m) \
        <a class="code" href="classting_1_1Mutex_1_1Guard.htm" title="Helper class which automatically Locks the given mutex.">ting::Mutex::Guard</a> mutexGuard(this-&gt;mutex); \
        T_SlotLinkIter i = this-&gt;SearchWeakRefMethSlot(o, m); \
        <span class="keywordflow">if</span>(i != this-&gt;slotLink.end()){ \
                this-&gt;slotLink.erase(i); \
                <span class="keywordflow">return</span> <span class="keyword">true</span>; \
        } \
        <span class="keywordflow">return</span> <span class="keyword">false</span>; \
}
</pre></div>
</div>
</div>
<a class="anchor" id="a8e4329df3fb11ed1c78114fd48096fab"></a><!-- doxytag: member="Signal.hpp::M_FUNC_PARAM_FULL" ref="a8e4329df3fb11ed1c78114fd48096fab" args="(n, a)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define M_FUNC_PARAM_FULL</td>
          <td>(</td>
          <td class="paramtype">n, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">a&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td>&nbsp;&nbsp;&nbsp;M_COMMA_IF_NOT_0(n) T_P##n p##n</td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a8dff8a96b2e78999308f721544366613"></a><!-- doxytag: member="Signal.hpp::M_FUNC_PARAM_NAME" ref="a8dff8a96b2e78999308f721544366613" args="(n, a)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define M_FUNC_PARAM_NAME</td>
          <td>(</td>
          <td class="paramtype">n, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">a&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td>&nbsp;&nbsp;&nbsp;M_COMMA_IF_NOT_0(n) p##n</td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a72286fea7ff3862d60f35a40ae98f756"></a><!-- doxytag: member="Signal.hpp::M_FUNC_PARAM_NAMES" ref="a72286fea7ff3862d60f35a40ae98f756" args="(n)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define M_FUNC_PARAM_NAMES</td>
          <td>(</td>
          <td class="paramtype">n&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td>&nbsp;&nbsp;&nbsp;M_REPEAT1(n, M_FUNC_PARAM_NAME, )</td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a00847195d6cf19cf5f8f70eabc8242d0"></a><!-- doxytag: member="Signal.hpp::M_FUNC_PARAM_TYPE" ref="a00847195d6cf19cf5f8f70eabc8242d0" args="(n, a)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define M_FUNC_PARAM_TYPE</td>
          <td>(</td>
          <td class="paramtype">n, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">a&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td>&nbsp;&nbsp;&nbsp;M_COMMA_IF_NOT_0(n) T_P##n</td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a4c9c16dded757fd7d883c9c3ce5035ba"></a><!-- doxytag: member="Signal.hpp::M_FUNC_PARAM_TYPES" ref="a4c9c16dded757fd7d883c9c3ce5035ba" args="(n)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define M_FUNC_PARAM_TYPES</td>
          <td>(</td>
          <td class="paramtype">n&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td>&nbsp;&nbsp;&nbsp;M_REPEAT1(n, M_FUNC_PARAM_TYPE, )</td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a4cde2f03e3fa32522439246e4a98b198"></a><!-- doxytag: member="Signal.hpp::M_FUNC_PARAMS_FULL" ref="a4cde2f03e3fa32522439246e4a98b198" args="(n)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define M_FUNC_PARAMS_FULL</td>
          <td>(</td>
          <td class="paramtype">n&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td>&nbsp;&nbsp;&nbsp;M_REPEAT1(n, M_FUNC_PARAM_FULL, )</td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="af3ea08a89d379991f729107b32fedf81"></a><!-- doxytag: member="Signal.hpp::M_FUNC_SLOT" ref="af3ea08a89d379991f729107b32fedf81" args="(num_func_params, num_sig_params)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define M_FUNC_SLOT</td>
          <td>(</td>
          <td class="paramtype">num_func_params, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">num_sig_params&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<b>Value:</b><div class="fragment"><pre class="fragment"><span class="keyword">template</span> &lt;<span class="keyword">class</span> T_Ret&gt; <span class="keyword">class </span>FuncSlot##num_func_params : <span class="keyword">public</span> SlotLink{ \
<span class="keyword">public</span>: \
        T_Ret(*f)(<a class="code" href="Signal_8hpp.htm#a4c9c16dded757fd7d883c9c3ce5035ba">M_FUNC_PARAM_TYPES</a>(num_func_params)); \
\
        FuncSlot##num_func_params(T_Ret(*function)(<a class="code" href="Signal_8hpp.htm#a4c9c16dded757fd7d883c9c3ce5035ba">M_FUNC_PARAM_TYPES</a>(num_func_params))) : \
                        f(function) \
        {} \
        <span class="keyword">virtual</span> <span class="keywordtype">bool</span> Execute(<a class="code" href="Signal_8hpp.htm#a4cde2f03e3fa32522439246e4a98b198">M_FUNC_PARAMS_FULL</a>(num_sig_params)){ \
                (*this-&gt;f)(<a class="code" href="Signal_8hpp.htm#a72286fea7ff3862d60f35a40ae98f756">M_FUNC_PARAM_NAMES</a>(num_func_params)); \
                <span class="keywordflow">return</span> <span class="keyword">false</span>; \
        } \
};
</pre></div>
</div>
</div>
<a class="anchor" id="a9787dae13801fca2d795c0f4621bb189"></a><!-- doxytag: member="Signal.hpp::M_MAX_NUM_SIG_PARAMETERS" ref="a9787dae13801fca2d795c0f4621bb189" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define M_MAX_NUM_SIG_PARAMETERS&nbsp;&nbsp;&nbsp;10</td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="ae2c863227b961c0fff1cc7845dbbf46a"></a><!-- doxytag: member="Signal.hpp::M_METHOD_SLOT" ref="ae2c863227b961c0fff1cc7845dbbf46a" args="(num_meth_params, num_sig_params)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define M_METHOD_SLOT</td>
          <td>(</td>
          <td class="paramtype">num_meth_params, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">num_sig_params&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<b>Value:</b><div class="fragment"><pre class="fragment"><span class="keyword">template</span> &lt;<span class="keyword">class</span> T_Ob, <span class="keyword">class</span> T_Ret&gt; <span class="keyword">class </span>MethodSlot##num_meth_params : <span class="keyword">public</span> SlotLink{ \
<span class="keyword">public</span>: \
        T_Ob* o; \
        T_Ret(T_Ob::*m)(<a class="code" href="Signal_8hpp.htm#a4c9c16dded757fd7d883c9c3ce5035ba">M_FUNC_PARAM_TYPES</a>(num_meth_params)); \
\
        MethodSlot##num_meth_params(T_Ob* <span class="keywordtype">object</span>, T_Ret(T_Ob::*method)(<a class="code" href="Signal_8hpp.htm#a4c9c16dded757fd7d883c9c3ce5035ba">M_FUNC_PARAM_TYPES</a>(num_meth_params))) : \
                        o(object), \
                        m(method) \
        {} \
        <span class="keyword">virtual</span> <span class="keywordtype">bool</span> Execute(<a class="code" href="Signal_8hpp.htm#a4cde2f03e3fa32522439246e4a98b198">M_FUNC_PARAMS_FULL</a>(num_sig_params)){ \
                (this-&gt;o-&gt;*(this-&gt;m))(<a class="code" href="Signal_8hpp.htm#a72286fea7ff3862d60f35a40ae98f756">M_FUNC_PARAM_NAMES</a>(num_meth_params)); \
                <span class="keywordflow">return</span> <span class="keyword">false</span>; \
        } \
};
</pre></div>
</div>
</div>
<a class="anchor" id="a3741b69e6b5d9e3c8c9abad291ca3da3"></a><!-- doxytag: member="Signal.hpp::M_METHOD_WEAKREF_SLOT" ref="a3741b69e6b5d9e3c8c9abad291ca3da3" args="(num_meth_params, num_sig_params)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define M_METHOD_WEAKREF_SLOT</td>
          <td>(</td>
          <td class="paramtype">num_meth_params, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">num_sig_params&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<b>Value:</b><div class="fragment"><pre class="fragment"><span class="keyword">template</span> &lt;<span class="keyword">class</span> T_Ob, <span class="keyword">class</span> T_Ret&gt; <span class="keyword">class </span>WeakRefMethodSlot##num_meth_params : <span class="keyword">public</span> SlotLink{ \
<span class="keyword">public</span>: \
        WeakRef&lt;T_Ob&gt; o; \
        T_Ret(T_Ob::*m)(<a class="code" href="Signal_8hpp.htm#a4c9c16dded757fd7d883c9c3ce5035ba">M_FUNC_PARAM_TYPES</a>(num_meth_params)); \
\
        WeakRefMethodSlot##num_meth_params(WeakRef&lt;T_Ob&gt;&amp; <span class="keywordtype">object</span>, T_Ret(T_Ob::*method)(<a class="code" href="Signal_8hpp.htm#a4c9c16dded757fd7d883c9c3ce5035ba">M_FUNC_PARAM_TYPES</a>(num_meth_params))) : \
                        o(object), \
                        m(method) \
        {} \
        <span class="keyword">virtual</span> <span class="keywordtype">bool</span> Execute(<a class="code" href="Signal_8hpp.htm#a4cde2f03e3fa32522439246e4a98b198">M_FUNC_PARAMS_FULL</a>(num_sig_params)){ \
                <span class="keywordflow">if</span>(Ref&lt;T_Ob&gt; r = this-&gt;o){ \
                        (r.operator-&gt;()-&gt;*(this-&gt;m))(<a class="code" href="Signal_8hpp.htm#a72286fea7ff3862d60f35a40ae98f756">M_FUNC_PARAM_NAMES</a>(num_meth_params)); \
                        <span class="keywordflow">return</span> <span class="keyword">false</span>; \
                }<span class="keywordflow">else</span>{\
                        <span class="keywordflow">return</span> <span class="keyword">true</span>; \
                } \
        } \
};
</pre></div>
</div>
</div>
<a class="anchor" id="a286f87d7166842083364fdedcf375808"></a><!-- doxytag: member="Signal.hpp::M_SEARCH_FUNCSLOT" ref="a286f87d7166842083364fdedcf375808" args="(num_func_params, num_sig_params)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define M_SEARCH_FUNCSLOT</td>
          <td>(</td>
          <td class="paramtype">num_func_params, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">num_sig_params&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<b>Value:</b><div class="fragment"><pre class="fragment"><span class="keyword">template</span> &lt;<span class="keyword">class</span> T_Ret&gt; T_SlotLinkIter SearchFuncSlot(T_Ret(*f)(<a class="code" href="Signal_8hpp.htm#a4c9c16dded757fd7d883c9c3ce5035ba">M_FUNC_PARAM_TYPES</a>(num_func_params))){ \
        <a class="code" href="debug_8hpp.htm#aca68c0d4ac8df0838e209fb5300f7be3">ASSERT</a>(f) \
        <span class="keywordflow">for</span>(T_SlotLinkIter i = this-&gt;slotLink.begin(); i != this-&gt;slotLink.end(); ++i){ \
                FuncSlot##num_func_params&lt;T_Ret&gt; *slot = \
                                <span class="keyword">dynamic_cast&lt;</span>FuncSlot##num_func_params&lt;T_Ret&gt;* <span class="keyword">&gt;</span>( \
                                                (*i).operator-&gt;() \
                                        ) \
                        ; \
                <span class="keywordflow">if</span>(slot){ \
                        <span class="keywordflow">if</span>(slot-&gt;f == f){ \
                                <span class="keywordflow">return</span> i; \
                        } \
                } \
        } \
        <span class="keywordflow">return</span> this-&gt;slotLink.end(); \
}
</pre></div>
</div>
</div>
<a class="anchor" id="a4ccf98921746c7f4f3115f195c41f6a8"></a><!-- doxytag: member="Signal.hpp::M_SEARCH_METHSLOT" ref="a4ccf98921746c7f4f3115f195c41f6a8" args="(num_meth_params, unused)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define M_SEARCH_METHSLOT</td>
          <td>(</td>
          <td class="paramtype">num_meth_params, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unused&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<b>Value:</b><div class="fragment"><pre class="fragment"><span class="keyword">template</span> &lt;<span class="keyword">class</span> T_Ob, <span class="keyword">class</span> T_Ret&gt; T_SlotLinkIter SearchMethSlot( \
                T_Ob* o, \
                T_Ret(T_Ob::*m)(<a class="code" href="Signal_8hpp.htm#a4c9c16dded757fd7d883c9c3ce5035ba">M_FUNC_PARAM_TYPES</a>(num_meth_params)) \
        ) \
{ \
        <a class="code" href="debug_8hpp.htm#aca68c0d4ac8df0838e209fb5300f7be3">ASSERT</a>(o) \
        <a class="code" href="debug_8hpp.htm#aca68c0d4ac8df0838e209fb5300f7be3">ASSERT</a>(m) \
        <span class="keywordflow">for</span>(T_SlotLinkIter i = this-&gt;slotLink.begin(); i != this-&gt;slotLink.end(); ++i){ \
                MethodSlot##num_meth_params&lt;T_Ob, T_Ret&gt; *slot = \
                                <span class="keyword">dynamic_cast&lt;</span>MethodSlot##num_meth_params&lt;T_Ob, T_Ret&gt;* <span class="keyword">&gt;</span>( \
                                                (*i).operator-&gt;() \
                                        ) \
                        ; \
                <span class="keywordflow">if</span>(slot){ \
                        <span class="keywordflow">if</span>(slot-&gt;m == m &amp;&amp; slot-&gt;o == o){ \
                                <span class="keywordflow">return</span> i; \
                        } \
                } \
        } \
        <span class="keywordflow">return</span> this-&gt;slotLink.end(); \
}
</pre></div>
</div>
</div>
<a class="anchor" id="a62792d50ace6e73082e82fc7e0056da6"></a><!-- doxytag: member="Signal.hpp::M_SEARCH_METHSLOT_WEAKREF" ref="a62792d50ace6e73082e82fc7e0056da6" args="(num_meth_params, unused)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define M_SEARCH_METHSLOT_WEAKREF</td>
          <td>(</td>
          <td class="paramtype">num_meth_params, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unused&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<b>Value:</b><div class="fragment"><pre class="fragment"><span class="keyword">template</span> &lt;<span class="keyword">class</span> T_Ob, <span class="keyword">class</span> T_Ret&gt; T_SlotLinkIter SearchWeakRefMethSlot( \
                <a class="code" href="classting_1_1WeakRef.htm" title="Weak Reference to a reference counted object.">ting::WeakRef&lt;T_Ob&gt;</a>&amp; o, \
                T_Ret(T_Ob::*m)(<a class="code" href="Signal_8hpp.htm#a4c9c16dded757fd7d883c9c3ce5035ba">M_FUNC_PARAM_TYPES</a>(num_meth_params)) \
        ) \
{ \
        <a class="code" href="debug_8hpp.htm#aca68c0d4ac8df0838e209fb5300f7be3">ASSERT</a>(m) \
        <a class="code" href="classting_1_1Ref.htm" title="Reference to a reference counted object.">ting::Ref&lt;T_Ob&gt;</a> ho(o); \
        <span class="keywordflow">for</span>(T_SlotLinkIter i = this-&gt;slotLink.begin(); i != this-&gt;slotLink.end(); ++i){ \
                WeakRefMethodSlot##num_meth_params&lt;T_Ob, T_Ret&gt; *slot = \
                                <span class="keyword">dynamic_cast&lt;</span>WeakRefMethodSlot##num_meth_params&lt;T_Ob, T_Ret&gt;* <span class="keyword">&gt;</span>( \
                                                (*i).operator-&gt;() \
                                        ) \
                        ; \
                <span class="keywordflow">if</span>(slot){ \
                        <a class="code" href="classting_1_1Ref.htm" title="Reference to a reference counted object.">ting::Ref&lt;T_Ob&gt;</a> hso(slot-&gt;o); \
                        <span class="keywordflow">if</span>(slot-&gt;m == m &amp;&amp; ho == hso){ \
                                <span class="keywordflow">return</span> i; \
                        } \
                } \
        } \
        <span class="keywordflow">return</span> this-&gt;slotLink.end(); \
}
</pre></div>
</div>
</div>
<a class="anchor" id="a551ea506f7229775331532a0663e4af9"></a><!-- doxytag: member="Signal.hpp::M_SIGNAL" ref="a551ea506f7229775331532a0663e4af9" args="(n, unused)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define M_SIGNAL</td>
          <td>(</td>
          <td class="paramtype">n, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unused&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a4ab915b43f00dd493c8eb9fa1dfeaf8f"></a><!-- doxytag: member="Signal.hpp::M_TEMPLATE" ref="a4ab915b43f00dd493c8eb9fa1dfeaf8f" args="(n)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define M_TEMPLATE</td>
          <td>(</td>
          <td class="paramtype">n&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td>&nbsp;&nbsp;&nbsp;M_IF_NOT_0(n, template &lt;, ) M_TEMPLATE_PARAMS(n) M_IF_NOT_0(n, &gt;, )</td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="ac2e09b5ed308aef5bc1d3a02b4631d0e"></a><!-- doxytag: member="Signal.hpp::M_TEMPLATE_PARAM" ref="ac2e09b5ed308aef5bc1d3a02b4631d0e" args="(n, a)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define M_TEMPLATE_PARAM</td>
          <td>(</td>
          <td class="paramtype">n, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">a&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td>&nbsp;&nbsp;&nbsp;M_COMMA_IF_NOT_0(n) class T_P##n</td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a00edffe73a19f0b65da07defa4a0a57b"></a><!-- doxytag: member="Signal.hpp::M_TEMPLATE_PARAMS" ref="a00edffe73a19f0b65da07defa4a0a57b" args="(n)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define M_TEMPLATE_PARAMS</td>
          <td>(</td>
          <td class="paramtype">n&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td>&nbsp;&nbsp;&nbsp;M_REPEAT1(n, M_TEMPLATE_PARAM, )</td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
</div>
<hr size="1"/><address style="text-align: right;"><small>Generated on Wed Apr 7 15:15:25 2010 for ting by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.6.1 </small></address>
</body>
</html>

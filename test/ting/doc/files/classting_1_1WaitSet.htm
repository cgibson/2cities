<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>ting: ting::WaitSet Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<!-- Generated by Doxygen 1.6.1 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="main.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="annotated.htm"><span>Class&nbsp;List</span></a></li>
      <li><a href="classes.htm"><span>Class&nbsp;Index</span></a></li>
      <li><a href="hierarchy.htm"><span>Class&nbsp;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&nbsp;Members</span></a></li>
    </ul>
  </div>
  <div class="navpath"><a class="el" href="namespaceting.htm">ting</a>::<a class="el" href="classting_1_1WaitSet.htm">WaitSet</a>
  </div>
</div>
<div class="contents">
<h1>ting::WaitSet Class Reference</h1><!-- doxytag: class="ting::WaitSet" -->
<p>Set of <a class="el" href="classting_1_1Waitable.htm" title="Base class for objects which can be waited for.">Waitable</a> objects to wait for.  
<a href="#_details">More...</a></p>

<p><code>#include &lt;<a class="el" href="WaitSet_8hpp_source.htm">WaitSet.hpp</a>&gt;</code></p>

<p><a href="classting_1_1WaitSet-members.htm">List of all members.</a></p>
<table border="0" cellpadding="0" cellspacing="0">
<tr><td colspan="2"><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classting_1_1WaitSet.htm#a61ca229ba96a105fd79229bd22e29b90">WaitSet</a> (<a class="el" href="namespaceting.htm#aa54945671d9955d39a42606fab2c1b0f">u32</a> maxSize)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Constructor.  <a href="#a61ca229ba96a105fd79229bd22e29b90"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classting_1_1WaitSet.htm#a6b52cc7bbac7772b35f10c8f78c7d75d">~WaitSet</a> ()</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Destructor.  <a href="#a6b52cc7bbac7772b35f10c8f78c7d75d"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classting_1_1WaitSet.htm#a82c740315d7e0ab0414394086334ae97">Add</a> (<a class="el" href="classting_1_1Waitable.htm">Waitable</a> *w, <a class="el" href="classting_1_1Waitable.htm#ad06cce175fd90cd3bda3960ffc7d7abe">Waitable::EReadinessFlags</a> flagsToWaitFor)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Add <a class="el" href="classting_1_1Waitable.htm" title="Base class for objects which can be waited for.">Waitable</a> object to the wait set.  <a href="#a82c740315d7e0ab0414394086334ae97"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classting_1_1WaitSet.htm#ad5e4ef0601355c7285e6b7e8136d75ec">Change</a> (<a class="el" href="classting_1_1Waitable.htm">Waitable</a> *w, <a class="el" href="classting_1_1Waitable.htm#ad06cce175fd90cd3bda3960ffc7d7abe">Waitable::EReadinessFlags</a> flagsToWaitFor)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Change wait flags for a given <a class="el" href="classting_1_1Waitable.htm" title="Base class for objects which can be waited for.">Waitable</a>.  <a href="#ad5e4ef0601355c7285e6b7e8136d75ec"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classting_1_1WaitSet.htm#a83feb2b9422c4d039e01b6a908e3e8c0">Remove</a> (<a class="el" href="classting_1_1Waitable.htm">Waitable</a> *w)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Remove <a class="el" href="classting_1_1Waitable.htm" title="Base class for objects which can be waited for.">Waitable</a> from wait set.  <a href="#a83feb2b9422c4d039e01b6a908e3e8c0"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classting_1_1WaitSet.htm#a9f6d4ac786e9a731abcda2242b59bf39">Wait</a> (<a class="el" href="classting_1_1Buffer.htm">Buffer</a>&lt; <a class="el" href="classting_1_1Waitable.htm">Waitable</a> * &gt; *out_events=0)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">wait for event.  <a href="#a9f6d4ac786e9a731abcda2242b59bf39"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classting_1_1WaitSet.htm#a112d3ab74291753be3dabc0cef86ccbf">WaitWithTimeout</a> (<a class="el" href="namespaceting.htm#aa54945671d9955d39a42606fab2c1b0f">u32</a> timeout, <a class="el" href="classting_1_1Buffer.htm">Buffer</a>&lt; <a class="el" href="classting_1_1Waitable.htm">Waitable</a> * &gt; *out_events=0)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">wait for event with timeout.  <a href="#a112d3ab74291753be3dabc0cef86ccbf"></a><br/></td></tr>
</table>
<hr/><a name="_details"></a><h2>Detailed Description</h2>
<p>Set of <a class="el" href="classting_1_1Waitable.htm" title="Base class for objects which can be waited for.">Waitable</a> objects to wait for. </p>
<hr/><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a61ca229ba96a105fd79229bd22e29b90"></a><!-- doxytag: member="ting::WaitSet::WaitSet" ref="a61ca229ba96a105fd79229bd22e29b90" args="(u32 maxSize)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ting::WaitSet::WaitSet </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceting.htm#aa54945671d9955d39a42606fab2c1b0f">u32</a>&nbsp;</td>
          <td class="paramname"> <em>maxSize</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Constructor. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>maxSize</em>&nbsp;</td><td>- maximum number of <a class="el" href="classting_1_1Waitable.htm" title="Base class for objects which can be waited for.">Waitable</a> objects can be added to this wait set. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a6b52cc7bbac7772b35f10c8f78c7d75d"></a><!-- doxytag: member="ting::WaitSet::~WaitSet" ref="a6b52cc7bbac7772b35f10c8f78c7d75d" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ting::WaitSet::~WaitSet </td>
          <td>(</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Destructor. </p>
<p>Note, that destructor will check if the wait set is empty. If it is not, then an assert will be triggered. It is user's responsibility to remove any waitable objects from the waitset before the wait set object is destroyed. </p>

</div>
</div>
<hr/><h2>Member Function Documentation</h2>
<a class="anchor" id="a82c740315d7e0ab0414394086334ae97"></a><!-- doxytag: member="ting::WaitSet::Add" ref="a82c740315d7e0ab0414394086334ae97" args="(Waitable *w, Waitable::EReadinessFlags flagsToWaitFor)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ting::WaitSet::Add </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classting_1_1Waitable.htm">Waitable</a> *&nbsp;</td>
          <td class="paramname"> <em>w</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classting_1_1Waitable.htm#ad06cce175fd90cd3bda3960ffc7d7abe">Waitable::EReadinessFlags</a>&nbsp;</td>
          <td class="paramname"> <em>flagsToWaitFor</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Add <a class="el" href="classting_1_1Waitable.htm" title="Base class for objects which can be waited for.">Waitable</a> object to the wait set. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>w</em>&nbsp;</td><td>- pointer to the <a class="el" href="classting_1_1Waitable.htm" title="Base class for objects which can be waited for.">Waitable</a> object. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>flagsToWaitFor</em>&nbsp;</td><td>- determine events waiting for which we are interested. </td></tr>
  </table>
  </dd>
</dl>
<dl><dt><b>Exceptions:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em><a class="el" href="classting_1_1Exc.htm" title="Basic exception class.">ting::Exc</a></em>&nbsp;</td><td>- in case the wait set is full or other error occurs. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ad5e4ef0601355c7285e6b7e8136d75ec"></a><!-- doxytag: member="ting::WaitSet::Change" ref="ad5e4ef0601355c7285e6b7e8136d75ec" args="(Waitable *w, Waitable::EReadinessFlags flagsToWaitFor)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ting::WaitSet::Change </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classting_1_1Waitable.htm">Waitable</a> *&nbsp;</td>
          <td class="paramname"> <em>w</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classting_1_1Waitable.htm#ad06cce175fd90cd3bda3960ffc7d7abe">Waitable::EReadinessFlags</a>&nbsp;</td>
          <td class="paramname"> <em>flagsToWaitFor</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Change wait flags for a given <a class="el" href="classting_1_1Waitable.htm" title="Base class for objects which can be waited for.">Waitable</a>. </p>
<p>Changes wait flags for a given waitable, which is in this waitset. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>w</em>&nbsp;</td><td>- pointer to <a class="el" href="classting_1_1Waitable.htm" title="Base class for objects which can be waited for.">Waitable</a> for which the changing of wait flags is needed. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>flagsToWaitFor</em>&nbsp;</td><td>- new wait flags to be set for the given <a class="el" href="classting_1_1Waitable.htm" title="Base class for objects which can be waited for.">Waitable</a>. </td></tr>
  </table>
  </dd>
</dl>
<dl><dt><b>Exceptions:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em><a class="el" href="classting_1_1Exc.htm" title="Basic exception class.">ting::Exc</a></em>&nbsp;</td><td>- in case the given <a class="el" href="classting_1_1Waitable.htm" title="Base class for objects which can be waited for.">Waitable</a> object is not added to this wait set or other error occurs. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a83feb2b9422c4d039e01b6a908e3e8c0"></a><!-- doxytag: member="ting::WaitSet::Remove" ref="a83feb2b9422c4d039e01b6a908e3e8c0" args="(Waitable *w)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ting::WaitSet::Remove </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classting_1_1Waitable.htm">Waitable</a> *&nbsp;</td>
          <td class="paramname"> <em>w</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Remove <a class="el" href="classting_1_1Waitable.htm" title="Base class for objects which can be waited for.">Waitable</a> from wait set. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>w</em>&nbsp;</td><td>- pointer to <a class="el" href="classting_1_1Waitable.htm" title="Base class for objects which can be waited for.">Waitable</a> object to be removed from the wait set. </td></tr>
  </table>
  </dd>
</dl>
<dl><dt><b>Exceptions:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em><a class="el" href="classting_1_1Exc.htm" title="Basic exception class.">ting::Exc</a></em>&nbsp;</td><td>- in case the given <a class="el" href="classting_1_1Waitable.htm" title="Base class for objects which can be waited for.">Waitable</a> is not added to this wait set or other error occurs. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a9f6d4ac786e9a731abcda2242b59bf39"></a><!-- doxytag: member="ting::WaitSet::Wait" ref="a9f6d4ac786e9a731abcda2242b59bf39" args="(Buffer&lt; Waitable * &gt; *out_events=0)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned ting::WaitSet::Wait </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classting_1_1Buffer.htm">Buffer</a>&lt; <a class="el" href="classting_1_1Waitable.htm">Waitable</a> * &gt; *&nbsp;</td>
          <td class="paramname"> <em>out_events</em> = <code>0</code></td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>wait for event. </p>
<p>This function blocks calling thread exectution until one of the <a class="el" href="classting_1_1Waitable.htm" title="Base class for objects which can be waited for.">Waitable</a> objects in the <a class="el" href="classting_1_1WaitSet.htm" title="Set of Waitable objects to wait for.">WaitSet</a> triggers. Upon return from the function, pointers to triggered objects are placed in the 'out_events' buffer and the return value from the function indicates number of these objects which have triggered. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>out_events</em>&nbsp;</td><td>- pointer to buffer where to put pointers to triggered <a class="el" href="classting_1_1Waitable.htm" title="Base class for objects which can be waited for.">Waitable</a> objects. The buffer will not be initialize to 0's by this function. The buffer shall be large enough to hold maxmimum number of Waitables this <a class="el" href="classting_1_1WaitSet.htm" title="Set of Waitable objects to wait for.">WaitSet</a> can hold. It is valid to pass 0 pointer, in that case this argument will not be used. </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>number of objects triggered. </dd></dl>
<dl><dt><b>Exceptions:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em><a class="el" href="classting_1_1Exc.htm" title="Basic exception class.">ting::Exc</a></em>&nbsp;</td><td>- in case of errors. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a112d3ab74291753be3dabc0cef86ccbf"></a><!-- doxytag: member="ting::WaitSet::WaitWithTimeout" ref="a112d3ab74291753be3dabc0cef86ccbf" args="(u32 timeout, Buffer&lt; Waitable * &gt; *out_events=0)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned ting::WaitSet::WaitWithTimeout </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceting.htm#aa54945671d9955d39a42606fab2c1b0f">u32</a>&nbsp;</td>
          <td class="paramname"> <em>timeout</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classting_1_1Buffer.htm">Buffer</a>&lt; <a class="el" href="classting_1_1Waitable.htm">Waitable</a> * &gt; *&nbsp;</td>
          <td class="paramname"> <em>out_events</em> = <code>0</code></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>wait for event with timeout. </p>
<p>The same as <a class="el" href="classting_1_1WaitSet.htm#a9f6d4ac786e9a731abcda2242b59bf39" title="wait for event.">Wait()</a> function, but takes wait timeout as parameter. Thus, this function will wait for any event or timeout. Note, that it guarantees that it will wait AT LEAST for specified number of milliseconds, or more. This is because of implementation for linux, if wait is interrupted by signal it will start waiting again, and so on. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>timeout</em>&nbsp;</td><td>- maximum time in milliseconds to wait for event. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>out_events</em>&nbsp;</td><td>- pointer to buffer where to put pointers to triggered <a class="el" href="classting_1_1Waitable.htm" title="Base class for objects which can be waited for.">Waitable</a> objects. Can be 0. </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>number of objects triggered. If 0 then timeout was hit. </dd></dl>
<dl><dt><b>Exceptions:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em><a class="el" href="classting_1_1Exc.htm" title="Basic exception class.">ting::Exc</a></em>&nbsp;</td><td>- in case of errors. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="WaitSet_8hpp_source.htm">WaitSet.hpp</a></li>
</ul>
</div>
<hr size="1"/><address style="text-align: right;"><small>Generated on Wed Apr 7 15:15:25 2010 for ting by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.6.1 </small></address>
</body>
</html>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>ting: ting::SocketLib Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<!-- Generated by Doxygen 1.6.1 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="main.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="annotated.htm"><span>Class&nbsp;List</span></a></li>
      <li><a href="classes.htm"><span>Class&nbsp;Index</span></a></li>
      <li><a href="hierarchy.htm"><span>Class&nbsp;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&nbsp;Members</span></a></li>
    </ul>
  </div>
  <div class="navpath"><a class="el" href="namespaceting.htm">ting</a>::<a class="el" href="classting_1_1SocketLib.htm">SocketLib</a>
  </div>
</div>
<div class="contents">
<h1>ting::SocketLib Class Reference</h1><!-- doxytag: class="ting::SocketLib" --><!-- doxytag: inherits="Singleton&lt; SocketLib &gt;" -->
<p><a class="el" href="classting_1_1Socket.htm" title="Basic socket class.">Socket</a> library singletone class.  
<a href="#_details">More...</a></p>

<p><code>#include &lt;<a class="el" href="Socket_8hpp_source.htm">Socket.hpp</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for ting::SocketLib:</div>
<div class="dynsection">
 <div class="center">
  <img src="classting_1_1SocketLib.gif" usemap="#ting::SocketLib_map" alt=""/>
  <map id="ting::SocketLib_map" name="ting::SocketLib_map">
<area href="classting_1_1Singleton.htm" alt="ting::Singleton&lt; SocketLib &gt;" shape="rect" coords="0,0,169,24"/>
</map>
 </div>
</div>

<p><a href="classting_1_1SocketLib-members.htm">List of all members.</a></p>
<table border="0" cellpadding="0" cellspacing="0">
<tr><td colspan="2"><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classting_1_1SocketLib.htm#a06eae92fadfc0218904734c3febec30b">SocketLib</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classting_1_1SocketLib.htm#ab62f01074baa038c7a2a16bce7535aa4">~SocketLib</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classting_1_1IPAddress.htm">IPAddress</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classting_1_1SocketLib.htm#a90b9a26c7cb2a26f595f4fc74bc22894">GetHostByName</a> (const char *hostName, <a class="el" href="namespaceting.htm#ab6db9a617ea99ab580a064cef5030906">u16</a> port)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Resolve host IP by its name.  <a href="#a90b9a26c7cb2a26f595f4fc74bc22894"></a><br/></td></tr>
</table>
<hr/><a name="_details"></a><h2>Detailed Description</h2>
<p><a class="el" href="classting_1_1Socket.htm" title="Basic socket class.">Socket</a> library singletone class. </p>
<p>This is a <a class="el" href="classting_1_1Socket.htm" title="Basic socket class.">Socket</a> library singletone class. Creating an object of this class initializes the library while destroying this object deinitializes it. So, the convenient way of initializing the library is to create an object of this class on the stack. Thus, when the object goes out of scope its destructor will be called and the library will be deinitialized automatically. This is what C++ RAII is all about ;-). </p>
<hr/><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a06eae92fadfc0218904734c3febec30b"></a><!-- doxytag: member="ting::SocketLib::SocketLib" ref="a06eae92fadfc0218904734c3febec30b" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ting::SocketLib::SocketLib </td>
          <td>(</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="ab62f01074baa038c7a2a16bce7535aa4"></a><!-- doxytag: member="ting::SocketLib::~SocketLib" ref="ab62f01074baa038c7a2a16bce7535aa4" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ting::SocketLib::~SocketLib </td>
          <td>(</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<hr/><h2>Member Function Documentation</h2>
<a class="anchor" id="a90b9a26c7cb2a26f595f4fc74bc22894"></a><!-- doxytag: member="ting::SocketLib::GetHostByName" ref="a90b9a26c7cb2a26f595f4fc74bc22894" args="(const char *hostName, u16 port)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classting_1_1IPAddress.htm">IPAddress</a> ting::SocketLib::GetHostByName </td>
          <td>(</td>
          <td class="paramtype">const char *&nbsp;</td>
          <td class="paramname"> <em>hostName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceting.htm#ab6db9a617ea99ab580a064cef5030906">u16</a>&nbsp;</td>
          <td class="paramname"> <em>port</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Resolve host IP by its name. </p>
<p>This function resolves host IP address by its name. If it fails resolving the IP address it will throw <a class="el" href="classting_1_1Socket_1_1Exc.htm" title="Basic exception class.">Socket::Exc</a>. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>hostName</em>&nbsp;</td><td>- null-terminated string representing host name. Example: "www.somedomain.com". </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>port</em>&nbsp;</td><td>- IP port number which will be placed in the resulting <a class="el" href="classting_1_1IPAddress.htm" title="a structure which holds IP address">IPAddress</a> structure. </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>filled <a class="el" href="classting_1_1IPAddress.htm" title="a structure which holds IP address">IPAddress</a> structure. </dd></dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="Socket_8hpp_source.htm">Socket.hpp</a></li>
</ul>
</div>
<hr size="1"/><address style="text-align: right;"><small>Generated on Wed Apr 7 15:15:25 2010 for ting by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.6.1 </small></address>
</body>
</html>
